# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Project_UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from os import error
from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import csv


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(801, 565)
        self.textEdit = QtWidgets.QTextEdit(Dialog)
        self.textEdit.setGeometry(QtCore.QRect(123, 100, 161, 21))
        self.textEdit.setObjectName("textEdit")

        self.comboBox_2 = QtWidgets.QComboBox(Dialog)
        self.comboBox_2.setGeometry(QtCore.QRect(550, 130, 151, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_3 = QtWidgets.QComboBox(Dialog)
        self.comboBox_3.setGeometry(QtCore.QRect(120, 140, 161, 21))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(300, 30, 341, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(540, 100, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 140, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(40, 180, 721, 321))
        # self.tableWidget.setRowCount(3)
        # self.tableWidget.setColumnCount(6)
        self.tableWidget.setObjectName("tableWidget")
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(0, item)
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(1, item)
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(2, item)
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(3, item)
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(4, item)
        # item = QtWidgets.QTableWidgetItem()
        # self.tableWidget.setHorizontalHeaderItem(5, item)
        self.textEdit_2 = QtWidgets.QTextEdit(Dialog)
        self.textEdit_2.setGeometry(QtCore.QRect(630, 100, 104, 21))
        self.textEdit_2.setObjectName("textEdit_2")
        self.loadBtn = QtWidgets.QPushButton(Dialog)
        self.loadBtn.setGeometry(QtCore.QRect(380, 140, 75, 23))
        self.loadBtn.setObjectName("loadBtn")
        self.loadBtn.clicked.connect(self.loadData)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Hotel Analytics"))
        self.comboBox_2.setItemText(0, _translate("Dialog", "Binary Search"))
        self.comboBox_2.setItemText(1, _translate("Dialog", "Linear Search"))
        self.comboBox_3.setItemText(0, _translate("Dialog", "Selection Sort"))
        self.comboBox_3.setItemText(1, _translate("Dialog", "Insertion Sort"))
        self.comboBox_3.setItemText(2, _translate("Dialog", "Merge Sort"))
        self.comboBox_3.setItemText(3, _translate("Dialog", "Quick Sort"))
        self.comboBox_3.setItemText(4, _translate("Dialog", "Counting Sort"))
        self.comboBox_3.setItemText(5, _translate("Dialog", "Hybrid Sort"))
        self.comboBox_3.setItemText(6, _translate("Dialog", "Bubble Sort"))
        self.label.setText(_translate("Dialog", "HOTEL ANALYTICS"))
        self.pushButton.setText(_translate("Dialog", "Search"))
        self.pushButton_2.setText(_translate("Dialog", "Sort"))

        # Event for Sort on Sort Button
        self.pushButton_2.clicked.connect(self.Sort)



        # item = self.tableWidget.horizontalHeaderItem(0)
        # item.setText(_translate("Dialog", "Name"))
        # item = self.tableWidget.horizontalHeaderItem(1)
        # item.setText(_translate("Dialog", "Location"))
        # item = self.tableWidget.horizontalHeaderItem(2)
        # item.setText(_translate("Dialog", "Charges"))
        # item = self.tableWidget.horizontalHeaderItem(3)
        # item.setText(_translate("Dialog", "No of Rooms"))
        # item = self.tableWidget.horizontalHeaderItem(4)
        # item.setText(_translate("Dialog", "Ratings"))
        # item = self.tableWidget.horizontalHeaderItem(5)
        # item.setText(_translate("Dialog", "Reviews"))
        self.loadBtn.setText(_translate("Dialog", "Load Data"))


    #  Sort Function
    def Sort(self):

        columnName = self.textEdit.toPlainText()
        if columnName!= "":
            Array = []
            size = self.tableWidget.rowCount()
            if columnName == "Hotel Name":
                for i in range(size):
                    column = 0
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSortString(Array)
            elif columnName == "Address":
                for i in range(size):
                    column = 1
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSortString(Array)
            elif columnName == "Reviews":
                for i in range(size):
                    column  =2
                    data = self.tableWidget.model().index(i,column).data()
                    if data != None:
                        data = data[:len(data)-8]
                        data = (data.replace(',',''))
                    else :
                        data = 0
                    
                    Array.append(self.tableWidget.model().index(i,column).data())

                mergeSort(Array)
            elif columnName == "Charges":
                for i in range(size):
                    column = 3
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSort(Array)
            elif columnName == "Rooms":
                for i in range(size):
                    column = 4
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSortString(Array)
            elif columnName == "Beds":
                for i in range(size):
                    column = 5
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSort(Array)
            elif columnName == "Ratings":
                for i in range(size):
                    column = 6
                    Array.append(self.tableWidget.model().index(i,column).data())
                mergeSort(Array)
            for i in range(len(Array)):
                self.tableWidget.setItem(i,column,QtWidgets.QTableWidgetItem(Array[i]))



        
    def loadData(self):
        df = pd.read_csv("Hotels2.csv")
        print(len(df["Hotel Name"]))
        self.tableWidget.setRowCount(len(df["Hotel Name"]))
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setHorizontalHeaderLabels(['Hotel Name','Address','Reviews','Charges','Rooms','Ratings'])
        for i in range(len(df)):
            self.tableWidget.setItem(i,0,QtWidgets.QTableWidgetItem(str(df["Hotel Name"][i])))
            self.tableWidget.setItem(i,1,QtWidgets.QTableWidgetItem(str(df["Address"][i])))
            self.tableWidget.setItem(i,2,QtWidgets.QTableWidgetItem(str(df["Reviews"][i])))
            self.tableWidget.setItem(i,3,QtWidgets.QTableWidgetItem(str(df["Charges"][i])))
            self.tableWidget.setItem(i,4,QtWidgets.QTableWidgetItem(str(df["Rooms"][i])))
            self.tableWidget.setItem(i,5,QtWidgets.QTableWidgetItem(str(df["Ratings"][i])))


        #  Sorting Algorithms
    
    #MergeSort
def mergeSortString(Arr):
    m=len(Arr)
    if len(Arr)>1:
        r=int(len(Arr)/2)
        Left=Arr[:r]
        Right=Arr[r:]
        mergeSortString(Left)
        mergeSortString(Right)
        i=0
        j=0
        k=0
        while (i<len(Left) and j<len(Right)):
            if Left[i][0]<Right[j][0]:
                Arr[k]=Left[i]
                i=i+1
                k=k+1
            else:
                Arr[k]=Right[j]
                j=j+1
                k=k+1
        while i<len(Left):
            Arr[k]=Left[i]
            i=i+1
            k=k+1
        while j<len(Right):
            Arr[k]=Right[j]
            j=j+1
            k=k+1
    

    #MergeSort
def mergeSort(Arr):
    m=len(Arr)
    if len(Arr)>1:
        r=int(len(Arr)/2)
        Left=Arr[:r]
        Right=Arr[r:]
        mergeSort(Left)
        mergeSort(Right)
        i=0
        j=0
        k=0
        while (i<len(Left) and j<len(Right)):
            if Left[i]< Right[j] :
                Arr[k]=Left[i]
                i=i+1
                k=k+1
            else:
                Arr[k]=Right[j]
                j=j+1
                k=k+1
        while i<len(Left):
            Arr[k]=Left[i]
            i=i+1
            k=k+1
        while j<len(Right):
            Arr[k]=Right[j]
            j=j+1
            k=k+1
            
            
    #Insertion Sort
def insertionSort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and key < arr[j] :
                arr[j + 1] = arr[j]
                j -= 1
        arr[j + 1] = key
        
        
      #Bubble Sort
def BubbleSort(arr):
    n=len(arr)
    for i in range(0,n):
        for j in range(0,n-1):
            if (arr[j]<arr[j+1]):
                temp=arr[j]
                arr[j]=arr[j+1]
                arr[j+1]=temp
    return arr


     #Counting Sort
def Count_Sort(A):
    n=len(A)
    C=[0]*10
    Res=[0]*n
    for i in range(0,n):
        C[A[i]]=C[A[i]]+1
    for i in range(1,10):
        C[i]=C[i]+C[i-1]
    i=n-1
    while i>=0:
        Res[C[A[i]]-1]=A[i]
        C[A[i]] -=1
        i=i-1
    return Res




        
    def array(self):
        Hotel_name=[]
        Address=[]
        Reviews=[]
        Charges=[]
        Rooms=[]
        Ratings=[]
        with open('Hotels2.csv', mode='r', enconding='utf-8')as file:
            csvFile=csv.reader(file)
            for line in csvFile:
                Hotel_name.append(line[0])
                Reviews.append(line[1])
                Charges.append(line[2])
                Rooms.append(line[3])
                Ratings.append(line[4])
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())